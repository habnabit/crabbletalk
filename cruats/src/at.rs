/* automatically generated by rust-bindgen 0.59.2 */

#[repr(C)]
#[derive(Debug, Copy, Clone, zerocopy::FromBytes, zerocopy::AsBytes, Default)]
pub struct at_addr {
    pub s_net: ::std::os::raw::c_ushort,
    pub s_node: ::std::os::raw::c_ushort,
}
#[test]
fn bindgen_test_layout_at_addr() {
    assert_eq!(
        ::std::mem::size_of::<at_addr>(),
        4usize,
        concat!("Size of: ", stringify!(at_addr))
    );
    assert_eq!(
        ::std::mem::align_of::<at_addr>(),
        2usize,
        concat!("Alignment of ", stringify!(at_addr))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<at_addr>())).s_net as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(at_addr),
            "::",
            stringify!(s_net)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<at_addr>())).s_node as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(at_addr),
            "::",
            stringify!(s_node)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, zerocopy::FromBytes, zerocopy::AsBytes, Default)]
pub struct sockaddr_at {
    pub sat_len: ::std::os::raw::c_short,
    pub sat_family: ::std::os::raw::c_short,
    pub sat_port: ::std::os::raw::c_short,
    pub sat_addr: at_addr,
    pub sat_zero: [::std::os::raw::c_char; 8usize],
}
#[test]
fn bindgen_test_layout_sockaddr_at() {
    assert_eq!(
        ::std::mem::size_of::<sockaddr_at>(),
        18usize,
        concat!("Size of: ", stringify!(sockaddr_at))
    );
    assert_eq!(
        ::std::mem::align_of::<sockaddr_at>(),
        2usize,
        concat!("Alignment of ", stringify!(sockaddr_at))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<sockaddr_at>())).sat_len as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(sockaddr_at),
            "::",
            stringify!(sat_len)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<sockaddr_at>())).sat_family as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(sockaddr_at),
            "::",
            stringify!(sat_family)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<sockaddr_at>())).sat_port as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(sockaddr_at),
            "::",
            stringify!(sat_port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<sockaddr_at>())).sat_addr as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(sockaddr_at),
            "::",
            stringify!(sat_addr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<sockaddr_at>())).sat_zero as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(sockaddr_at),
            "::",
            stringify!(sat_zero)
        )
    );
}
